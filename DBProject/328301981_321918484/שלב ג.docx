# שלב ג' – אינטגרציה ומבטים (Views)

## תרשימי DSD
- **DSD שלי:** ראו קובץ DSD.png (שלב א)
- **DSD של השותפים:** ראו קובץ DSD של השותפים.jpg (שלב ג)
- **DSD משותף (אינטגרציה):** ראו קובץ DSD משותף.jpg (שלב ג)

**הסבר:**
בשלב האינטגרציה בוצע מיזוג בין מבני הנתונים של שני השותפים. נבחנו כל הישויות, שדות ומפתחות, בוצע איחוד טבלאות דומות, הוסרו כפילויות, והוגדרו אילוצים אחידים. התוצאה היא דיאגרמת DSD אחת שמייצגת את כל מבנה הנתונים של המסעדה, עם קשרים עקביים בין כל הישויות, תוך שמירה על שלמות ואחידות הנתונים.

---

## תרשימי ERD
- **ERD שלי:** ראו קובץ ERD.png (שלב א)
- **ERD של השותפים:** ראו קובץ ERD של השותפים.jpg (שלב ג)
- **ERD משותף (אינטגרציה):** ראו קובץ ERD משותף.jpg (שלב ג)

**הסבר:**
בשלב האינטגרציה בוצע חיבור בין כל הישויות והקשרים של שני הצדדים, תוך שמירה על כל המידע והקשרים ההכרחיים. כל ישות מופיעה פעם אחת בלבד, כל קשרי ה-1:N וה-N:M הותאמו למבנה המאוחד, והתווספו מפתחות זרים רלוונטיים. כך מתקבל ERD שלם, ברור, ומייצג את כל תהליכי המסעדה בצורה אינטגרטיבית.

---

## החלטות אינטגרציה
- בוצע איחוד בין טבלאות/ישויות דומות של שני השותפים, תוך שמירה על שלמות הנתונים.
- הוספת אילוצים חדשים (Constraints) לשמירה על עקביות בין טבלאות.
- עדכון מפתחות זרים (Foreign Keys) כך שיתמכו במבנה המאוחד.
- יצירת מבטים (Views) מרכזיים לניתוח נתונים רוחבי.
- הסרת כפילויות ושדות מיותרים.

---

## הסבר מילולי של תהליך האינטגרציה והפקודות
תהליך האינטגרציה כלל:
1. השוואת מבני הטבלאות בין שני הפרויקטים.
2. מיזוג טבלאות דומות, תוך שמירה על כל המידע.
3. עדכון סכמות, הוספת אילוצים, ומפתחות זרים.
4. יצירת Views מרכזיים (ראו views.sql).
5. בדיקות שלמות נתונים והרצת שאילתות בדיקה.

---

## המשמעות של המערכת המשולבת וטבלת People
בשלב ג' נוצרה מערכת משולבת שמאגדת את מערכת ניהול המסעדה עם מערכת מחקרית של צוות נוסף. האינטגרציה לא מסתכמת רק במיזוג טבלאות – היא יוצרת ארגון חדש שבו אדם יכול להיות גם חוקר וגם מלצר, או למלא תפקיד אחד בלבד, והכל מנוהל תחת ישות מרכזית אחת.

**מהות המערכת החדשה:**
המערכת המשולבת מאפשרת לנהל תהליכים חוצי-ארגון: ניתן לעקוב אחרי עובדים שהם גם חוקרים, לבצע ניתוחים משותפים, ולבצע שאילתות שמחברות בין עולם המסעדה (הזמנות, תשלומים, שירות) לעולם המחקר (פרויקטים, ניסויים, צוותי מחקר).

**טבלת People – הגשר בין המערכות:**
הטבלה המרכזית שנוספה, People, מהווה גשר בין שתי המערכות:
- researcher_id: מזהה של חוקר (ממערכת המחקר)
- waiter_id: מזהה של מלצר (ממערכת המסעדה)

כך, כל שורה בטבלה מייצגת אדם שיכול להיות חוקר, מלצר, או שניהם. ניתן לקשר בין חוקרים למלצרים לפי מזהה משותף, ולבצע ניהול גמיש של תפקידים.

**דוגמה לשימוש:**
אפשר לשלוף את כל האנשים שממלאים גם תפקיד של חוקר וגם של מלצר, או לבצע ניתוחים חוצי-מערכות (למשל: אילו חוקרים עבדו גם כמלצרים במסעדה).

**השתקפות ב-ERD/DSD:**
בתרשימי ה-ERD/DSD המשותפים ניתן לראות את טבלת People כישות מקשרת בין ישויות Waiter ו-Researcher. הדבר מדגיש את הגמישות והעוצמה של המערכת החדשה – לא מדובר רק באינטגרציה טכנית, אלא במערכת ארגונית אחת שמאפשרת ניהול כולל של משאבי אנוש, תהליכים, ונתונים משני עולמות.

---

## מבטים (Views) – תיאור, קוד, דוגמת SELECT ופלט

### 1. view_restaurant (סיכום תשלומים לפי אמצעי תשלום)
- **תיאור:** מציג את סכום התשלומים הכולל לכל אמצעי תשלום במסעדה.
- **קוד:**
```
CREATE VIEW view_restaurant AS
SELECT Payment_Method, SUM(Total_price) AS Total_Price
FROM Payment
JOIN RestOrder ON Payment.Payment_ID = RestOrder.Payment_ID
GROUP BY Payment_Method;
```
- **דוגמת SELECT:**
```
SELECT * FROM view_restaurant;
```
- **פלט לדוגמה:** ראו קובץ select from view_restaurant PAYMENT METHOD.png

---

### 2. view_restaurant (סיכום הכנסות לפי סכום)
- **תיאור:** מציג את סכום ההכנסות הכולל לפי סכום ההזמנות.
- **קוד:**
```
CREATE VIEW view_restaurant AS
SELECT SUM(Total_price) AS Total_Price
FROM RestOrder;
```
- **דוגמת SELECT:**
```
SELECT * FROM view_restaurant;
```
- **פלט לדוגמה:** ראו קובץ select from view_restaurant TOTAL PRICE.png

---

### 3. crew_name (רשימת צוות)
- **תיאור:** מציג את שמות כל חברי הצוות במסעדה.
- **קוד:**
```
CREATE VIEW crew_name AS
SELECT Full_Name FROM Waiter;
```
- **דוגמת SELECT:**
```
SELECT * FROM crew_name;
```
- **פלט לדוגמה:** ראו קובץ SELECT crew_name .png

---

### 4. researcher_name (רשימת חוקרים/לקוחות)
- **תיאור:** מציג את שמות כל החוקרים/הלקוחות במסעדה.
- **קוד:**
```
CREATE VIEW researcher_name AS
SELECT Full_Name FROM Customer;
```
- **דוגמת SELECT:**
```
SELECT * FROM researcher_name;
```
- **פלט לדוגמה:** ראו קובץ select researcher_name.png

---

> לכל מבט מוצג תיאור, קוד יצירה, דוגמת SELECT, ופלט מצורף בקובץ תמונה.

---
