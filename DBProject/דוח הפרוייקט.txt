דוח פרויקט – מערכת לניהול מסד נתונים למסעדה

מגישים:
- מאור לוי (328301981)
- ארי עוז (321918484)

---

תיאור הארגון:
מערכת לניהול מסד נתונים עבור מסעדה, הכוללת ניהול הזמנות, תשלומים, עובדים, לקוחות, ושולחנות – עם דגש על שלמות, אמינות, ויעילות הנתונים.

---

תוכן עניינים
1. תיאור הארגון
2. שלב א' – בניית בסיס הנתונים והגדרת ישויות
   2.1 פירוט הישויות
   2.2 קשרים בין הישויות
   2.3 ניתוח נירמול (3NF)
   2.4 התרשימים
   2.5 שיטות הכנסת נתונים
   2.6 צילומי מסך – גיבוי ושחזור
   2.7 הפקודות SQL
   2.8 סיכום שלב א'
3. שלב ב' – שאילתות מתקדמות, מגבלות, ועדכונים
   3.1 קבצי שלב ב'
   3.2 דוגמאות למגבלות (Constraints)
   3.3 דוגמאות לשאילתות SELECT מתקדמות
   3.4 דוגמאות לעדכון (UPDATE) ומחיקה (DELETE)
   3.5 ניהול טרנזקציות – Commit & Rollback
   3.6 סיכום שלב ב'
4. סיכום כללי

---

שלב א' – בניית בסיס הנתונים והגדרת ישויות

פירוט הישויות:
- Dish – מנות המסעדה
- Payment – תשלומים
- Waiter – מלצרים
- Customer – לקוחות
- RestTable – שולחנות
- RestOrder – הזמנות
- part_of_order – קישור בין מנות להזמנות

לכל ישות תיאור, שדות עיקריים, ותפקידה במערכת.

קשרים בין הישויות:
- תרשים ERD מציג את כל הקשרים (1:1, 1:N, N:M) בין הישויות.

ניתוח נירמול (3NF):
- כל טבלה עומדת בכללי 3NF – כל שדה תלוי במפתח הראשי בלבד.

התרשימים:
- ERD.png
- DSD.png

שיטות הכנסת נתונים:
- Mockaroo – יצירת נתונים סינתטיים
- GenerateData – יצירת טבלאות מותאמות אישית
- סקריפט פייתון – הכנסת נתונים אוטומטית

צילומי מסך – גיבוי ושחזור:
- גיבוי: OPENBACKUP.png, BACKUP.png
- שחזור: RESTORE.png

הפקודות SQL:
- דוגמאות ל- CREATE, INSERT, SELECT, DROP – עם הסברים ודוגמאות קוד.

סיכום שלב א':
- בסיס נתונים מלא, מאורגן, מנותח ומגובה.

---

שלב ב' – שאילתות מתקדמות, מגבלות, ועדכונים

קבצי שלב ב':
- Constraints.sql, SelectQueries.sql, UpdateQueries.sql, DeleteQueries.sql, RollbackCommit (צילומי מסך)

דוגמאות למגבלות (Constraints):
- אילוצים על ערכים, ייחודיות, ערכי ברירת מחדל, תאריכים, ועוד.
- דוגמה:
ALTER TABLE Dish ADD CONSTRAINT check_time_to_make CHECK (time_to_make <= TIME '01:00:00');

דוגמאות לשאילתות SELECT מתקדמות:
- שליפת מנות איטיות, חישוב הכנסה יומית, לקוחות קבועים.
- דוגמה:
SELECT Dish.Dish_Name, Dish.time_to_make, Customer.Full_Name AS Customer
FROM RestOrder
JOIN part_of_order ON RestOrder.RestOrder_ID = part_of_order.RestOrder_ID
JOIN Dish ON Dish.Dish_ID = part_of_order.Dish_ID
WHERE Dish.time_to_make > '00:20:00';

דוגמאות לעדכון (UPDATE) ומחיקה (DELETE):
- עדכון סטטוס שולחן, מחיקת מנות לא פעילות, מחיקת לקוחות לא פעילים.
- דוגמה:
DELETE FROM Dish WHERE Dish_ID NOT IN (SELECT DISTINCT Dish_ID FROM part_of_order);

ניהול טרנזקציות – Commit & Rollback:
- צילומי מסך: ביצוע לפני ROLLBACK.png, ביצוע COMMIT.png, ביצוע ROLLBACK.png, צילום אחרי ROLLBACK.png
- ניהול טרנזקציות מבטיח שכל שינוי קריטי יתבצע בשלמותו או יתבטל לחלוטין במקרה של תקלה.

סיכום שלב ב':
- מסד נתונים אמין, עם מגבלות, שאילתות מתקדמות, עדכונים, מחיקות, וניהול טרנזקציות מקצועי.

---

סיכום כללי:
הפרויקט מדגים תכנון, בנייה, תיעוד, וניהול של מערכת מסדי נתונים מודרנית למסעדה – כולל כל שלבי החיים של המידע, דגש על אמינות, גיבוי, שלמות, ויכולת ניתוח מתקדמת.

---

הדוח נכתב ועוצב בקפידה, כולל דוגמאות קוד, צילומי מסך, והסברים מפורטים לכל שלב.
